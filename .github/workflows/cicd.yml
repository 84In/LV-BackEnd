name: CI/CD Pipeline

on:
  push:
    branches:
      - deployment
  pull_request:
    branches:
      - deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push all services
        run: |
          # Li·ªát k√™ t·∫•t c·∫£ c√°c d·ªãch v·ª• c·ªßa b·∫°n
          services="apigateway chatservice discoveryserver mediaservice notificationservice orderservice productservice searchservice userservice"
          
          for service in $services; do
            echo "üî® Building $service..."
            # T·∫°o Docker image cho m·ªói d·ªãch v·ª• v√† ƒë·∫©y l√™n Docker Hub
            if docker build -t ${{ secrets.DOCKER_USERNAME }}/$service:${{ github.sha }} -f $service/Dockerfile $service; then
              docker tag ${{ secrets.DOCKER_USERNAME }}/$service:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/$service:latest
              docker push ${{ secrets.DOCKER_USERNAME }}/$service:${{ github.sha }}
              docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
              echo "‚úÖ Successfully built & pushed $service"
            else
              echo "‚ùå Failed to build $service. Skipping..."
            fi
          done

      - name: Set up Kubernetes context
        uses: azure/setup-kubectl@v1
        with:
          kubectl-version: 'v1.21.0'
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}  # K·∫øt n·ªëi t·ªõi Kubernetes cluster c·ªßa b·∫°n

      - name: Apply ConfigMap (Docker Hub credentials)
        run: |
          kubectl apply -f ./k8s/config/dockerhub-config.yaml  # √Åp d·ª•ng ConfigMap cho DockerHub credentials

      - name: Deploy all services to Kubernetes
        run: |
          services="apigateway chatservice discoveryserver mediaservice notificationservice orderservice productservice searchservice userservice"
          
          for service in $services; do
            # Tri·ªÉn khai m·ªói service l√™n Kubernetes
            echo "üöÄ Deploying $service..."
            kubectl apply -f ./$service/deployment.yaml
            kubectl apply -f ./$service/hpa.yaml
          done

      - name: Verify Deployment
        run: |
          services="apigateway chatservice discoveryserver mediaservice notificationservice orderservice productservice searchservice userservice"
          
          for service in $services; do
            # Ki·ªÉm tra tr·∫°ng th√°i c·ªßa m·ªói deployment
            kubectl rollout status deployment/$service
          done
