name: CI/CD Pipeline

on:
  push:
    branches:
      - deployment
  pull_request:
    branches:
      - deployment

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push all services
        run: |
          # Li·ªát k√™ t·∫•t c·∫£ c√°c d·ªãch v·ª• c·ªßa b·∫°n
          services="apigateway chatservice discoveryserver mediaservice notificationservice orderservice productservice searchservice userservice"
          
          for service in $services; do
            echo "üî® Building $service..."
            # T·∫°o Docker image cho m·ªói d·ªãch v·ª• v√† ƒë·∫©y l√™n Docker Hub
            if docker build -t ${{ secrets.DOCKER_USERNAME }}/$service:${{ github.sha }} -f $service/Dockerfile $service; then
              docker tag ${{ secrets.DOCKER_USERNAME }}/$service:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/$service:latest
              docker push ${{ secrets.DOCKER_USERNAME }}/$service:${{ github.sha }}
              docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
              echo "‚úÖ Successfully built & pushed $service"
            else
              echo "‚ùå Failed to build $service. Skipping..."
            fi
          done
  pull-and-deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.2.0
        env:
              DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        with:
              host: ${{ secrets.SERVER_HOST }}
              username: ${{ secrets.SERVER_USERNAME }}
              key: ${{ secrets.SERVER_KEY }}
              port: ${{ secrets.SERVER_PORT }}
              envs: DOCKER_USERNAME
              script_path: scripts/deploy.sh
