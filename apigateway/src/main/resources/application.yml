server:
  port: 8080

eureka:
  instance:
    hostname: discoveryserver
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:4000"
            allowedMethods: "*"
            allowedHeaders: "*"
            allowCredentials: true
        add-to-simple-url-handler-mapping:
      discovery:
        locator:
          enabled: true
      routes:
        - id: userservice
          uri: lb://userservice
          predicates:
            - Path=/api/v1/users/**,/api/v1/addresses/**,/api/v1/carts/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        - id: mediaservice
          uri: lb://mediaservice
          predicates:
            - Path=/api/v1/upload/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        - id: productservice
          uri: lb://productservice
          predicates:
            - Path=/api/v1/products/**,/api/v1/categories/**,/api/v1/colors/**,/api/v1/promotions/**,/api/v1/sizes/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        - id: authservice
          uri: lb://authservice
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
#        - id: orderservice
#          uri: lb://orderservice
#          predicates:
#            - Path=/api/v1/orders/**
#          filters:
#            - name: RequestRateLimiter
#              args:
#                redis-rate-limiter.replenishRate: 10
#                redis-rate-limiter.burstCapacity: 20
#                redis-rate-limiter.requestedTokens: 1

  data:
    redis:
      port: 6379
      host: localhost
