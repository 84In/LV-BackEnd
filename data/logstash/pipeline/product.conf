input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-java.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://productservicedb:3306/productservicedb?useSSL=false&allowPublicKeyRetrieval=true"
    jdbc_user => "productservice"
    jdbc_password => "productservice2425"

    use_column_value => true
    tracking_column => "updated_at"
    tracking_column_type => "timestamp"

    jdbc_pool_timeout => 600
    jdbc_validation_timeout => 600
    connection_retry_attempts => 5
    connection_retry_attempts_wait_time => 10
    schedule => "* * * * *"

    statement => "
      SELECT
        p.id,
        p.name,
        p.description,
        p.images,
        p.is_active as is_active,
        p.updated_at,
        p.created_at,
        c.id as category_id,
        c.name as category_name,
        c.code_name as category_code_name,
        c.images as category_images,
        c.description as category_description,
        c.is_active as category_is_active
      FROM
        products p
      JOIN
        categories c ON p.category_id = c.id
      WHERE
        p.updated_at > :sql_last_value
    "

    jdbc_paging_enabled => true
    jdbc_page_size => 1000
  }
}

filter {
  mutate {
    rename => {
      "id" => "[id]"
      "name" => "[name]"
      "description" => "[description]"
      "images" => "[images]"
      "is_active" => "[isActive]"
      "category_id" => "[category][id]"
      "category_name" => "[category][name]"
      "category_code_name" => "[category][codeName]"
      "category_images" => "[category][images]"
      "category_description" => "[category][description]"
      "category_is_active" => "[category][isActive]"
    }
    convert => {
      "[isActive]" => "boolean"
      "[category][isActive]" => "boolean"
    }
  }

  date {
    match => [ "created_at", "yyyy-MM-dd HH:mm:ss", "ISO8601" ]
    target => "created_at"
    timezone => "UTC"
  }
  date {
    match => [ "updated_at", "yyyy-MM-dd HH:mm:ss", "ISO8601" ]
    target => "updated_at"
    timezone => "UTC"
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "products_index"
    document_id => "%{[id]}"
    action => "update"
    doc_as_upsert => true
  }
  stdout {
    codec => rubydebug
  }
}