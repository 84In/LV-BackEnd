version: '3.9'

services:
  userservicedb:
    image: mysql:8.0
    container_name: userservicedb
    environment:
      MYSQL_ROOT_PASSWORD: shop2425
      MYSQL_USER: userservice
      MYSQL_PASSWORD: userservice2425
      MYSQL_DATABASE: userservicedb
    ports:
      - '3306:3306'
    volumes:
      - userservicedb_data:/var/lib/mysql
      - ./init-scripts/userservice:/docker-entrypoint-initdb.d
  productservicedb:
    image: mysql:8.0
    container_name: productservicedb
    environment:
      MYSQL_ROOT_PASSWORD: shop2425
      MYSQL_USER: productservice
      MYSQL_PASSWORD: productservice2425
      MYSQL_DATABASE: productservicedb
    ports:
      - '3307:3306'
    volumes:
      - productservicedb_data:/var/lib/mysql
      - ./init-scripts/productservice:/docker-entrypoint-initdb.d
  orderservicedb:
    image: mysql:8.0
    container_name: orderservicedb
    environment:
      MYSQL_ROOT_PASSWORD: shop2425
      MYSQL_USER: orderservice
      MYSQL_PASSWORD: orderservice2425
      MYSQL_DATABASE: orderservicedb
    ports:
      - '3308:3306'
    volumes:
      - orderservicedb_data:/var/lib/mysql
      - ./init-scripts/orderservice:/docker-entrypoint-initdb.d
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # Tắt bảo mật để dễ sử dụng trong môi trường dev
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # Giới hạn bộ nhớ heap
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
  axonserver:
    image: axoniq/axonserver:latest
    hostname: axonserver
    container_name: axonserver
    environment:
      - 'AXONIQ_AXONSERVER_STANDALONE=TRUE'
    ports:
      - '8024:8024'
      - '8124:8124'
      - '8224:8224'
  redis:
    image: redis:latest
    restart: always
    hostname: redis
    ports:
      - "6379:6379"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.7.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.7.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - broker
    ports:
      - '9021:9021'
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

volumes:
  userservicedb_data:
  productservicedb_data:
  orderservicedb_data:
  elasticsearch_data:
