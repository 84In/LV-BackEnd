client:
  url: ${CLIENT_URL:http://localhost:4000}

server:
  port: 9003

eureka:
  client:
    register-with-eureka: true
    fetch-registry: false
    service-url:
      defaultZone: http://hdan-2:30861/eureka
  instance:
    prefer-ip-address: true
    ip-address: hdan-3              # Hostname của Cloud 3
    non-secure-port: 30903          # NodePort dự định expose
    instance-id: orderservice:${random.uuid}

spring:
  datasource:
    url: jdbc:mysql://hdan-1:30308/orderservicedb  # NodePort exposed từ orderservicedb ở Cloud 1
    username: orderservice
    password: orderservice2425
    driver-class-name: com.mysql.cj.jdbc.Driver

  kafka:
    enable: true
    bootstrap-servers: hdan-1:30992  # Kafka exposed ở Cloud 1
    consumer:
      group-id: order-group

  config:
    import: classpath:application-common.yml

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true

  data:
    web:
      pageable:
        default-page-size: 15

logging:
  level:
    org.hibernate.SQL: OFF
    org.hibernate.type.descriptor.sql: OFF
    org.hibernate.engine.jdbc.batch.internal: OFF
    org.hibernate.engine.transaction.internal: OFF
    org.springframework: ERROR

payment:
  vnpay:
    hashSecret: ${VNPAY_HASH_SECRET:MQN1ZKF963OHI8TZ9MJUB7IGJE9OSZP5}
    tmnCode: ${VNPAY_TMN_CODE:03ECV6B1}
    returnUrl: ${VNPAY_RETURN_URL:http://apigateway/api/v1/orders/vnpay/callback}
    create:
      endpoint: ${VNPAY_CREATE_ENDPOINT:https://sandbox.vnpayment.vn/paymentv2/vpcpay.html}
    query:
      endpoint: ${VNPAY_QUERY_ENDPOINT:https://sandbox.vnpayment.vn/merchant_webapi/api/transaction?vnp_Command=querydr}
    refund:
      endpoint: ${VNPAY_REFUND_ENDPOINT:https://sandbox.vnpayment.vn/merchant_webapi/api/transaction?vnp_Command=refund}
    version: ${VNPAY_VERSION:2.1.0}
    orderType: ${VNPAY_ORDER_TYPE:other}

  zalopay:
    appid: ${ZALOPAY_APP_ID:554}
    key1: ${ZALOPAY_KEY1:8NdU5pG5R2spGHGhyO99HN1OhD8IQJBn}
    key2: ${ZALOPAY_KEY2:uUfsWgfLkRLzq6W2uNXTCxrfxs51auny}
    callback: ${ZALOPAY_CALLBACK_URL:http://apigateway/api/v1/orders/zalopay/callback}
    returnUrl: ${ZALOPAY_RETURN_URL:http://localhost:3000/payment-result?status=%s&orderId=%s}
    create:
      endpoint: ${ZALOPAY_CREATE_ENDPOINT:https://sandbox.zalopay.com.vn/v001/tpe/createorder}
    query:
      endpoint: ${ZALOPAY_QUERY_ENDPOINT:https://sandbox.zalopay.com.vn/v001/tpe/getstatusbyapptransid}
    refund:
      endpoint: ${ZALOPAY_REFUND_ENDPOINT:https://sandbox.zalopay.com.vn/v001/tpe/partialrefund}

ghtk:
  production:
    api:
      url:
        create: ${GHTK_PROD_CREATE_URL:https://services.giaohangtietkiem.vn/services/shipment/order}
        cancel: ${GHTK_PROD_CANCEL_URL:https://services.giaohangtietkiem.vn/services/shipment/cancel}
        status: ${GHTK_PROD_STATUS_URL:https://services.giaohangtietkiem.vn/services/shipment/v2}
        label: ${GHTK_PROD_LABEL_URL:https://services.giaohangtietkiem.vn/services/label}
        fee: ${GHTK_PROD_FEE_URL:https://services.giaohangtietkiem.vn/services/shipment/fee}
      token: ${GHTK_PROD_TOKEN:186BjTm18OSmkbCzz0HJVYV3j0UUtafYk2taARP}
      secret: ${GHTK_PROD_SECRET:S22869201}

  staging:
    api:
      url:
        create: ${GHTK_STAGE_CREATE_URL:https://services-staging.ghtklab.com/services/shipment/order}
        cancel: ${GHTK_STAGE_CANCEL_URL:https://services-staging.ghtklab.com/services/shipment/cancel}
        status: ${GHTK_STAGE_STATUS_URL:https://services-staging.ghtklab.com/services/shipment/v2}
        label: ${GHTK_STAGE_LABEL_URL:https://services-staging.ghtklab.com/services/label}
        fee: ${GHTK_STAGE_FEE_URL:https://services-staging.ghtklab.com/services/shipment/fee}
      token: ${GHTK_STAGE_TOKEN:73Cs59xTqgURo7LhVP2zSxAfDpSScrRkwXdp1U}
      secret: ${GHTK_STAGE_SECRET:S22869201}
